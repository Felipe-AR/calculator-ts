{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\www\\\\tmp\\\\my-app\\\\src\\\\components\\\\Calculator\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { operations } from '../../utils/operations';\nimport { Container, Formula, Header, NumPad, Title } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  displayValue: '',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\n\nconst Calculator = () => {\n  _s();\n\n  const [display, setDisplay] = useState(initialState);\n\n  const ClearMemory = () => {\n    setDisplay({ ...initialState\n    });\n  };\n\n  const AddDigit = n => {\n    if (n === '.' && display.displayValue.includes('.')) return;\n    const clearDisplay = display.displayValue === '0' || display.clearDisplay;\n    const currentValue = clearDisplay ? '' : display.displayValue;\n    const displayValue = currentValue + n;\n    setDisplay({ ...display,\n      displayValue: displayValue\n    });\n\n    if (n !== '.') {\n      const currentIndex = display.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...display.values];\n      values[currentIndex] = newValue;\n      setDisplay({ ...display,\n        values\n      });\n    }\n  };\n\n  const SetOperations = operation => {\n    if (display.current === 0) {\n      setDisplay({ ...display,\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === '=';\n      const currentOperation = display.operation;\n      const values = [...display.values];\n      values[0] = operations(currentOperation, values[0], values[1]);\n      values[1] = 0;\n      setDisplay({\n        displayValue: `${values[0]}`,\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formula, {\n        children: display.displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumPad, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: 'AC',\n        onClick: ClearMemory,\n        math: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '×',\n        onClick: SetOperations,\n        math: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '+',\n        onClick: SetOperations,\n        math: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '÷',\n        onClick: SetOperations,\n        math: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '7',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '8',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '9',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '−',\n        onClick: SetOperations,\n        math: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '4',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '5',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '6',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '=',\n        onClick: SetOperations,\n        math: true,\n        height: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '1',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '2',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '3',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '0',\n        onClick: AddDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '.',\n        onClick: AddDigit,\n        width: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"UCJbwe7xvKrDw2W+KVyCUAlXftw=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Users/Felipe/www/tmp/my-app/src/components/Calculator/index.tsx"],"names":["React","useState","Button","operations","Container","Formula","Header","NumPad","Title","initialState","displayValue","clearDisplay","operation","values","current","Calculator","display","setDisplay","ClearMemory","AddDigit","n","includes","currentValue","currentIndex","newValue","parseFloat","SetOperations","equals","currentOperation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button';\nimport { operations } from '../../utils/operations';\nimport { Container, Formula, Header, NumPad, Title } from './style';\n\ninterface Display {\n  displayValue: string;\n  clearDisplay: boolean;\n  operation: string | null;\n  values: number[];\n  current: number;\n}\n\nconst initialState: Display = {\n  displayValue: '',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n}\n\nconst Calculator: React.FC = () => {\n  const [display, setDisplay] = useState(initialState);\n\n  const ClearMemory = () => {\n    setDisplay({...initialState});\n  }\n\n  const AddDigit = (n: string) => {\n    if (n === '.' && display.displayValue.includes('.')) return;\n    const clearDisplay = display.displayValue === '0'\n        || display.clearDisplay;\n\n    const currentValue = clearDisplay ? '' : display.displayValue;\n    const displayValue = currentValue + n;\n    setDisplay({...display,  displayValue: displayValue});\n\n    if (n !== '.') {\n        const currentIndex = display.current;\n        const newValue = parseFloat(displayValue);\n        const values = [...display.values];\n        values[currentIndex] = newValue;\n        setDisplay({...display, values });\n    }\n  }\n\n\n  const SetOperations = (operation: string) =>     {\n    if (display.current === 0) {\n        setDisplay({...display, operation, current: 1, clearDisplay: true });\n    } else {\n        const equals = operation === '=';\n        const currentOperation = display.operation;\n\n        const values = [...display.values];\n        values[0] = operations(currentOperation, values[0], values[1]);\n        values[1] = 0;\n        setDisplay({\n            displayValue: `${values[0]}`,\n            operation: equals ? null : operation,\n            current: equals ? 0 : 1,\n            clearDisplay: !equals,\n            values\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title></Title>\n        <Formula>{display.displayValue}</Formula>\n      </Header>\n      <NumPad>\n        <Button label={'AC'} onClick={ClearMemory} math/>\n        <Button label={'×'} onClick={SetOperations} math/>\n        <Button label={'+'} onClick={SetOperations} math/>\n        <Button label={'÷'} onClick={SetOperations} math/>\n        <Button label={'7'} onClick={AddDigit}/>\n        <Button label={'8'} onClick={AddDigit}/>\n        <Button label={'9'} onClick={AddDigit}/>\n        <Button label={'−'} onClick={SetOperations} math/>\n        <Button label={'4'} onClick={AddDigit}/>\n        <Button label={'5'} onClick={AddDigit}/>\n        <Button label={'6'} onClick={AddDigit}/>\n        <Button label={'='} onClick={SetOperations} math height={3}/>\n        <Button label={'1'} onClick={AddDigit}/>\n        <Button label={'2'} onClick={AddDigit}/>\n        <Button label={'3'} onClick={AddDigit}/>\n        <Button label={'0'} onClick={AddDigit}/>\n        <Button label={'.'} onClick={AddDigit} width={2}/>\n      </NumPad>\n    </Container>\n  );\n};\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}